---
title: "Avances de resultados sobre la encuesta de automatización 2024"
author: "José Rodríguez de la Fuente - Eduardo Chávez Molina"
format: 
  html:
    theme: litera
    toc: true
    code-fold: show
---

```{r base y liberias, echo=FALSE, message=FALSE, warning=FALSE}
pacman::p_load(tidyverse, haven, summarytools, janitor, ggthemr, GDAtools, ggsci, factoextra, FactoMineR)

rm(list = ls())

base <- read_sav("bases/Base OEI 20-11.sav")

ggthemr("flat")

```

```{r arreglo de variables, echo=FALSE, message=FALSE, warning=FALSE}

base <- base %>% 
  mutate(sex = factor(case_when(sex == 2 ~ "Varón",
                                sex == 1 ~ "Mujer",
                                sex == 3 ~ "No binario",
                            TRUE ~ NA_character_)),
         sitcony = factor(case_when(sitcony == 1 ~ "unido",
                                   sitcony == 2 ~ "casado",
                                   sitcony == 3 ~ "separado/a o divorciado/a",
                                   sitcony == 4 ~ "viudo/a",
                                   sitcony == 5 ~ "soltero/a",
                                   TRUE ~ NA_character_)),
         obs = factor(case_when(obs == 1 ~ "Obra social",
                                obs == 2 | obs == 4 ~ "Prepaga",
                                obs == 3 ~ "Hospital público o centros de salud",
                                TRUE ~ NA_character_)),
         pais = factor(case_when(pais == 1 ~ "En esta localidad",
                                  pais == 2 ~ "En otra localidad de esta provincia",
                                  pais == 3 ~ "En otra provincia",
                                  pais == 4 ~ "En un país limítrofe",
                                  pais == 5 ~ "En otro país",
                                  TRUE ~ NA_character_)),
         local = factor(case_when(local == 1 ~ "CABA",
                                  local == 2 ~ "Conurbano GBA",
                                  local == 3 ~ "Córdoba",
                                  local == 4 ~ "Mar del Plata",
                                  TRUE ~ NA_character_)),
         nivel_ed = factor(case_when(nivel == 1 | ((nivel == 3 | nivel == 4) & nivel2 == 0) ~ "Hasta sec. incom.",
                                    (nivel == 3 | nivel == 4) & nivel2 == 1 ~ "Hasta sec. com.",
                                    nivel == 5 & nivel2 == 0 ~ "Hasta terc. incom.",
                                    nivel == 5 & nivel2 == 1 ~ "Hasta terc. com.",
                                    nivel == 6 & nivel2 == 0 ~ "Universitario incom.",
                                    nivel == 6 & nivel2 == 1 ~ "Universitario com.",
                                    nivel == 7 ~ "Posgrado",
                                    TRUE ~ NA_character_),
                           levels = c("Hasta sec. incom.", "Hasta sec. com.", "Hasta terc. incom.", "Hasta terc. com.", "Universitario incom.", "Universitario com.", "Posgrado")),
         tit = case_when(tit == 1 ~ "Ciencias sociales / humanidades",
                         tit == 2 ~ "Economía y administración",
                         tit == 3 ~ "Ciencias naturales",
                         tit == 4 ~ "Comunicación",
                         tit == 5 ~ "Arte",
                         tit == 6 ~ "Educación física",
                         tit == 7 ~ "Agrario / ambiente",
                         tit == 8 ~ "Técnica",
                         TRUE ~ NA_character_),
         tit2_c = factor(tit2_c),
         caes_f = factor(CAES_letra, labels = c("Agricultura, ganadería, caza, pesca",
                                                "Industria manufacturera",
                                                "Construcción",
                                                "Comercio",
                                                "Alojamiento y servicios de comidas",
                                                "Información y comunicación",
                                                "Actividades financieras y de seguros",
                                                "Actividades profesionales, científicas y técnicas",
                                                "Actividades administratias y servicios de apoyo",
                                                "Administración pública y defensa",
                                                "Enseñanza",
                                                "Salud humana y servicios sociales",
                                                "Otras actividades de servicio")),
         ramact = factor(ramact, labels = c("Software",
                                        "Metalmecánica",
                                        "Farmacéutica",
                                        "Alimentación",
                                        "Hotelería",
                                        "Textil",
                                        "Mueble")),
         CIUO1 = factor(case_when(CIUO >= 1000 & CIUO < 2000 ~ "Directores y gerentes",
                           CIUO >= 2000 & CIUO < 3000 ~ "Profesionales científicos e intelectuales",
                           CIUO >= 3000 & CIUO < 4000 ~ "Técnicos y profesionales de nivel medio",
                           CIUO >= 4000 & CIUO < 5000 ~ "Personal de apoyo administrativo",
                           CIUO >= 5000 & CIUO < 6000 ~ "Trabajadores de los servicios y comerciantes",
                           CIUO >= 7000 & CIUO < 8000 ~ "Oficiales, operarios y artesanos de artes mecánicas y de otros oficios",
                           CIUO >= 8000 & CIUO < 9000 ~ "Operadores de instalaciones y máquinas y ensambladores",
                           CIUO >= 9000 & CIUO < 9990 ~ "Ocupaciones elementales",
                           TRUE ~ NA_character_),
                        levels = c("Directores y gerentes",
                                   "Profesionales científicos e intelectuales",
                                   "Técnicos y profesionales de nivel medio",
                                   "Personal de apoyo administrativo",
                                   "Trabajadores de los servicios y comerciantes",
                                                                      "Oficiales, operarios y artesanos de artes mecánicas y de otros oficios",
                                   "Operadores de instalaciones y máquinas y ensambladores",
                                   "Ocupaciones elementales")),
         tamano = ifelse(trabajprin5 == -999, NA_character_, trabajprin5),
         tamano = factor(tamano, labels = c("Una sola persona",
                                    "2 a 5",
                                    "6 a 10",
                                    "11 a 50",
                                    "51 a 200",
                                    "Más de 200")))

base <- base %>% 
  mutate(across(tarea1:tarea4, ~factor(., labels = c("Para nada", "Muy poco", "En alguna medida", "En gran medida", "En muy alta medida"))))

base <- base %>% 
  mutate(across(frecuencia1:tecno5, ~ na_if(., -999))) 

base <- base %>%
  mutate(across(frecuencia1:tecno5, ~factor(., levels = c(1, 2, 3, 4, 5),
                                                  labels = c("Nunca",
                                                             "Menos de una vez al mes",
                                                             "Menos de una vez a la semana pero por lo menos una vez al mes",
                                                             "Por lo menos una vez a la semana pero no todos los días",
                                                             "Todos los días"))))


base <- base %>% 
  mutate(ia1 = factor(ia1, labels = c("No", "Sí")))

         









#Imputación ingresos

```

## Descriptivos

### Datos sociodemográficos
```{r datos sociodemográficos, echo=FALSE, message=FALSE, warning=FALSE, results='asis'}
demograficos <- base %>% 
  select(sex, Edad, sitcony, hij, obs, pais, local)

print(dfSummary(demograficos, 
                varnumbers   = FALSE, 
                valid.col    = FALSE, 
                graph.magnif = 0.76),
      method = 'render')
```


### Datos educativos 
```{r datos educativos, echo=FALSE, message=FALSE, warning=FALSE}
base %>%
  group_by(nivel_ed) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = nivel_ed, y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.02), size = 3) +
  labs(title = "Nivel educativo alcanzado",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))
  
base %>%
  filter(!is.na(tit)) %>% 
  group_by(tit) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = fct_reorder(tit, n), y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.02), size = 3) +
  labs(title = "Título de egreso del secundario",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))

base %>%
  filter(nivel_ed %in% c("Hasta terc. com.", "Universitario com.", "Posgrado")) %>% 
  group_by(tit2_c) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = tit2_c, y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.02), size = 3) +
  labs(title = "Tipo de título superior",
       subtitle = "Población que finalizó estudios superiores",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))
```

### Capacitaciones 

En esta sección calculamos el porcentaje de cursos, capacitaciones, etc., que realizaron los encuestados en términos generales y en aquellos casos arfirmativos, se observan cuántos estuvieron vinculados al trabajo.

```{r capacitaciones, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  summarise(ev = mean(eduvirt, na.rm = T),
            ev_t = mean(eduvirt1, na.rm = T),
            capacit = mean(capacit1, na.rm = T),
            capacit_t = mean(educol1, na.rm = T),
            seminario = mean(capacit2, na.rm = T),
            seminario_t = mean(eduprop1, na.rm = T),
            otros_cursos = mean(capacit3, na.rm = T),
            otros_cursos_t = mean(eduni1, na.rm = T)) %>% 
  pivot_longer(cols = everything(), names_to = "tipo", values_to = "porcentaje") %>% 
  mutate(tipo = factor(tipo, labels = c("Educación virtual (población total)",
                                        "Educación virtual (relacionado al trabajo)",
                                        "Capacitación (población total)",
                                        "Capacitación (relacionado al trabajo)",
                                        "Seminarios (población total)",
                                        "Seminarios (relacionado al trabajo)",
                                        "Otros cursos (población total)",
                                        "Otros cursos (relacionado al trabajo)"))) %>%  
  ggplot(aes(x = fct_rev(tipo), y = porcentaje)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1, suffix = ""), y = porcentaje - 0.04), size = 3) +
  labs(title = "Cursos y capacitaciones realizadas en el último año",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  coord_flip()

  
```


### Trabajo y rama de actividad

```{r Rama, echo=FALSE, message=FALSE, warning=FALSE}

base %>%
  group_by(caes_f) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = fct_rev(caes_f), y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.02), size = 3) +
  labs(title = "Rama de actividad declarada",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 35)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  coord_flip()


base %>%
  group_by(ramact) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = ramact, y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.02), size = 3) +
  labs(title = "Rama de actividad muestra",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 35)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  coord_flip()
```


```{r Ocupacion, echo=FALSE, message=FALSE, warning=FALSE}
base %>%
  group_by(CIUO1) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = fct_rev(CIUO1), y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.015), size = 3) +
  labs(title = "Ocupación según CIUO 08 a 1 dígito",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 25)) +
  coord_flip()


base %>%
  group_by(tamano) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = tamano, y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.015), size = 3) +
  labs(title = "Personas según tamaño del establecimiento",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 25))
```


### Tareas y actividades en el trabajo (Interacción, aprendizaje, organización, trabajo físico)

```{r Autonomía, echo=FALSE, message=FALSE, warning=FALSE}

base %>% 
  pivot_longer(cols = tarea1:tarea4, names_to = "tarea", values_to = "categoria") %>% 
  count(tarea, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = tarea) %>% 
  ggplot(aes(x = tarea, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Dimensiones de la autonomía en el trabajo",
       subtitle = "Nivel de elección o cambio de...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 8)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Secuencia de tareas", "Forma de hacer el trabajo",
                              "Velocidad y ritmo",
                              "Horas de trabajo")) +
  coord_flip()
  

```

```{r Aprendizaje, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = frecuencia1:frecuencia3, names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Dimensiones del aprendizaje en el trabajo",
       subtitle = "Proporción de tiempo en el que...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_discrete(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Aprende cosas nuevas con colegas", "Aprende haciendo",
                              "Se mantiene al día con productos y servicios"), width = 20)) 

```

```{r Cooperacion, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = c(frecuencia4, frecuencia5, frecuencia6, frecuencia7), names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Dimensiones de la cooperación en el trabajo",
       subtitle = "Proporción de tiempo en el que con compañeros del trabajo...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_discrete(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Coopera o colabora",
                                       "Comparte información",
                                       "Capacita o enseña",
                                       "Asesora o aconseja"), width = 20))

```

```{r Planificación, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = c(frecuencia8, frecuencia9), names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Dimensiones de la planificación en el trabajo",
       subtitle = "Proporción de tiempo en el que...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_discrete(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Planifica sus propias actividades",
                                       "Planifica actividades de otros"), width = 20))

```

```{r Persuación, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = c(frecuencia10, frecuencia11), names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Dimensiones de la persuación en el trabajo",
       subtitle = "Proporción de tiempo en el que...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_discrete(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Convence o influencia sobre otras personas",
                                       "Negocia con las personas"), width = 20))

```


```{r Trabajo físico, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = c(frecuencia12:frecuencia14), names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Dimensiones del trabajo físico",
       subtitle = "Proporción de tiempo en el que...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_discrete(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Realiza tareas físicas por tiempo prolongado",
                                       "Transporta o mueve cargas pesadas",
                                       "Debe ser hábil o preciso con los dedos o manos"), width = 20))

```


### Habilidades cognitivas (lectura, escritura, números, problemas)

```{r Habiliades lectura-escritura, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = habili1:habili9, names_to = "tarea", values_to = "categoria") %>% 
  count(tarea, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = tarea) %>% 
  na.omit() %>% 
  ggplot(aes(x = tarea, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Habilidades de lectura y escritura",
       subtitle = "Con qué frecuencia...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 8)) +
  scale_fill_discrete(guide = guide_legend(nrow = 2),
                      labels = function(x) str_wrap(x, width = 25)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Lee órdenes o instrucciones",
                              "Lee cartas, memos o correos electrónicos",
                              "Lee artículos en periódicos o revistas prof.",
                              "Lee manuales o material de referencia",
                              "Lee cuentas y facturas",
                              "Lee mapas, diagramas o esquemas",
                              "Escribe cartas o correos electrónicos",
                              "Escribe artículos para periódicos o revistas",
                              "Escribe informes")) +
  coord_flip()
  

```

```{r Habiliades numéricas, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = habili10:habili15, names_to = "tarea", values_to = "categoria") %>% 
  count(tarea, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = tarea) %>% 
  na.omit() %>%
  ggplot(aes(x = tarea, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Habilidades numéricas y problemas",
       subtitle = "Con qué frecuencia...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 8)) +
  scale_fill_discrete(guide = guide_legend(nrow = 2),
                      labels = function(x) str_wrap(x, width = 25)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Calcula precios, costos o presupuestos",
                              "Calcula fracciones, decimales o porcentajes",
                              "Usa cálculos algebraicos o fórmulas simples",
                              "Usa estadística compleja",
                              "Se enfrenta a problemas simples",
                              "Se enfrenta a problemas complejos")) +
  coord_flip()
  

```

### Tecnología

```{r Tecnología, echo=FALSE, message=FALSE, warning=FALSE}

base %>% 
  pivot_longer(cols = tecno1:tecno5, names_to = "tarea", values_to = "categoria") %>% 
  count(tarea, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = tarea) %>% 
  na.omit() %>%
  ggplot(aes(x = tarea, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Habilidades tecnológicas",
       subtitle = "Con qué frecuencia...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 8)) +
  scale_fill_discrete(guide = guide_legend(nrow = 2),
                      labels = function(x) str_wrap(x, width = 25)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Realiza operaciones en internet",
                              "Usa hojas de cálculo",
                              "Usa procesador de texto",
                              "Usa un lenguaje de programación",
                              "Realiza videoconferencias")) +
  coord_flip()
  

```

### Inteligencia artificial

```{r IA, echo=FALSE, message=FALSE, warning=FALSE}
base %>%
  group_by(ia1) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = ia1, y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = "")), 
            size = 3,
            position = position_stack(vjust = 0.5)) +
  labs(title = "Usa inteligencia artificial en su trabajo",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))

```

```{r Usos de IA, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  summarise(ia2_01 = mean(ia2_1, na.rm = T),
            ia2_02 = mean(ia2_2, na.rm = T),
            ia2_03 = mean(ia2_3, na.rm = T),
            ia2_04 = mean(ia2_4, na.rm = T),
            ia2_05 = mean(ia2_5, na.rm = T),
            ia2_06 = mean(ia2_6, na.rm = T),
            ia2_07 = mean(ia2_7, na.rm = T),
            ia2_08 = mean(ia2_8, na.rm = T),
            ia2_09 = mean(ia2_9, na.rm = T),
            ia2_10 = mean(ia2_10, na.rm = T)) %>% 
  pivot_longer(cols = everything(), names_to = "tipo", values_to = "porcentaje") %>% 
  ggplot(aes(x = fct_rev(tipo), y = porcentaje)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1, suffix = ""), y = porcentaje - 0.04), size = 3) +
  labs(title = "Principales usos de la IA",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Otros",
                              "Cálculos matemáticos",
                              "Programación",
                              "Consultas (chatbot)",
                              "Reconocimiento de audio",
                              "Generación de imagen y video",
                              "Reconocimiento de imagen",
                              "Traducir textos",
                              "Comprensión / Síntesis de textos",
                              "Redactar, editar, corregir textos")) +
  coord_flip()
```

```{r Programas de IA, echo=FALSE, message=FALSE, warning=FALSE}

base %>% 
  summarise(ia3_01 = mean(ia3_1, na.rm = T),
            ia3_02 = mean(ia3_2, na.rm = T),
            ia3_03 = mean(ia3_3, na.rm = T),
            ia3_04 = mean(ia3_4, na.rm = T),
            ia3_05 = mean(ia3_5, na.rm = T),
            ia3_06 = mean(ia3_6, na.rm = T),
            ia3_07 = mean(ia3_7, na.rm = T),
            ia3_08 = mean(ia3_8, na.rm = T),
            ia3_09 = mean(ia3_9, na.rm = T),
            ia3_10 = mean(ia3_10, na.rm = T)) %>% 
  pivot_longer(cols = everything(), names_to = "tipo", values_to = "porcentaje") %>% 
  mutate(tipo = factor(tipo, labels = c("ChatGPT", "Bard", "Microsoft Copilot", "GitHub Copilot", "DALL-E",
                                        "Midjourney", "DeepL", "Civitai", "Quillbot", "Character.IA"))) %>% 
  filter(porcentaje > 0) %>%
  ggplot(aes(x = fct_rev(tipo), y = porcentaje)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1, suffix = ""), y = porcentaje - 0.04), size = 3) +
  labs(title = "Principales herramientas de IA utilizadas",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  coord_flip()

```



## Exploración multidimensional

### Análisis de correspondencias múltiples

En este análisis se indaga la relación entre las dimensiones laborales identificadas como cuellos de botella a la automatización. 

```{r ACM, echo=FALSE, message=FALSE, warning=FALSE, out.width='120%'}

base_mca <- base %>% 
  select(frecuencia4, frecuencia5, frecuencia6, frecuencia7, frecuencia8, frecuencia9, frecuencia10, frecuencia11, habili14, habili15, habili11, habili13, habili3, habili6, habili8, habili9, tecno4, tarea4, CIUO1)

base_mca <- base_mca %>% 
  mutate(across(frecuencia4:tecno4, ~case_when(. == "Nunca" ~ "0",
                                                . == "Menos de una vez al mes" ~ "<1",
                                                . == "Menos de una vez a la semana pero por lo menos una vez al mes" ~ "1-3",
                                                . == "Por lo menos una vez a la semana pero no todos los días" ~ "4-29",
                                                . == "Todos los días" ~ "30")),
         tarea4 = case_when(tarea4 == "Para nada" ~ "N",
                            tarea4 == "Muy poco" ~ "MP",
                            tarea4 == "En alguna medida" ~ "AM",
                            tarea4 == "En gran medida" ~ "GM",
                            tarea4 == "Muy alta medida" ~ "T")) %>% 
  rename(cooperar = frecuencia4,
         compartir_info = frecuencia5,
         ensenar = tarea4,
         aconsejar = frecuencia7,
         planif_prop = frecuencia8,
         planif_otros = frecuencia9,
         org_tiempo = tarea4,
         influenciar = frecuencia10,
         negociar = frecuencia11,
         problema_simple = habili14,
         problema_complejo = habili15,
         calculo_medio = habili11,
         calculo_avanzado = habili13,
         lectura1 = habili3,
         lectura2 = habili6,
         escritura1 = habili8,
         escritura2 = habili9,
         leng_prog = tecno4)


mca <- speMCA(base_mca[,1:16], ncp = 2)

# mca <- flip.mca(mca, dim = 1)

modif.rate(mca)$modif 


ggmca <- ggcloud_variables(mca, vlab = T, shapes = T, shapesize = 1.5, force = .2,
                  textsize = 2, points = "best", legend = "none", col = "black") +
  labs(title = "Análisis de correspondencias múltiples", 
       subtitle = "Tareas y habilidades laborales. Variables activas",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_text(size = 9),
        axis.title.y = element_text(size = 9),
        axis.text.y = element_text(size = 8),
        axis.text.x = element_text(size = 8),
        plot.caption = element_text(size = 9, hjust = 1)) 

ggmca

```

```{r ACM suplementarias, echo=FALSE, message=FALSE, warning=FALSE, out.width='120%'}

ggmca <- ggcloud_variables(mca, vlab = T, shapes = T, shapesize = 1.5, force = .2,
                  textsize = 2, points = "best", legend = "none", col = "lightgrey") +
  labs(title = "Análisis de correspondencias múltiples", 
       subtitle = "Tareas y habilidades laborales. Variables suplementarias (OCUPACIONES)",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_text(size = 9),
        axis.title.y = element_text(size = 9),
        axis.text.y = element_text(size = 8),
        axis.text.x = element_text(size = 8),
        plot.caption = element_text(size = 9, hjust = 1)) 

ggadd_supvars(ggmca, mca, vars = base_mca["CIUO1"], vlab = F, force = 2, shapes = T, shapesize = 1.5)


```


