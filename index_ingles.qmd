---
title: "Avances de resultados sobre la encuesta de automatización 2024"
author: "José Rodríguez de la Fuente - Eduardo Chávez Molina"
format: 
  html:
    theme: litera
    toc: true
    code-fold: show
    code-links:
      - text: Link a repo
        href: repo
    fig-width: 8
    fig-height: 5
    dpi: 300
---

```{r base y liberias, echo=FALSE, message=FALSE, warning=FALSE}
pacman::p_load(tidyverse, haven, summarytools, janitor, ggsci, GDAtools, ggsci, DT,
               VIM, gtsummary, ggridges, ggrepel)

rm(list = ls())

base <- read_sav("bases/Base OEI 20-11.sav")

theme_set(theme_classic() +
            theme(plot.caption = element_text(size = 9)))

options(scipen = 999)



```

```{r arreglo de variables, echo=FALSE, message=FALSE, warning=FALSE}
base <- base %>% 
  mutate(sex = factor(case_when(sex == 2 ~ "Male",
                                sex == 1 | sex == 3 ~ "Female",
                            TRUE ~ NA_character_)),
         grupo_edad = factor(case_when(Edad < 30 ~ "19-29",
                                Edad >= 30 & Edad < 40 ~ "30-39",
                                Edad >= 40 & Edad < 66 ~ "40-65",
                                Edad >= 66 ~ ">= 66"),
                             levels = c("19-29", "30-39", "40-65", ">= 66")),
         sitcony = factor(case_when(sitcony == 1 ~ "In a relationship",
                                   sitcony == 2 ~ "Married",
                                   sitcony == 3 ~ "Separated or divorced",
                                   sitcony == 4 ~ "Widowed",
                                   sitcony == 5 ~ "Single",
                                   TRUE ~ NA_character_)),
         obs = factor(case_when(obs == 1 ~ "Social security",
                                obs == 2 | obs == 4 ~ "Private health insurance",
                                obs == 3 ~ "Public hospital or health centers",
                                TRUE ~ NA_character_)),
         pais = factor(case_when(pais == 1 ~ "In this locality",
                                  pais == 2 ~ "In another locality of this province",
                                  pais == 3 ~ "In another province",
                                  pais == 4 ~ "In a neighboring country",
                                  pais == 5 ~ "In another country",
                                  TRUE ~ NA_character_)),
         local = factor(case_when(local == 1 ~ "Ciudad de Buenos Aires",
                                  local == 2 ~ "Gran Buenos Aires",
                                  local == 3 ~ "Córdoba",
                                  local == 4 ~ "Mar del Plata",
                                  TRUE ~ NA_character_)),
         nivel_ed = factor(case_when(nivel == 1 | ((nivel == 3 | nivel == 4) & nivel2 == 0) ~ "Up to incomplete secondary",
                                    (nivel == 3 | nivel == 4) & nivel2 == 1 ~ "Up to complete secondary",
                                    nivel == 5 & nivel2 == 0 ~ "Up to incomplete tertiary",
                                    nivel == 5 & nivel2 == 1 ~ "Up to complete tertiary",
                                    nivel == 6 & nivel2 == 0 ~ "Incomplete university",
                                    nivel == 6 & nivel2 == 1 ~ "Complete university",
                                    nivel == 7 ~ "Postgraduate",
                                    TRUE ~ NA_character_),
                           levels = c("Up to incomplete secondary", "Up to complete secondary", "Up to incomplete tertiary", "Up to complete tertiary", "Incomplete university", "Complete university", "Postgraduate")),
         nivel_ed_2 = factor(case_when(nivel <= 4 | ((nivel == 5 | nivel == 6) & nivel2 == 0) ~ "Up to complete secondary",
                                       (nivel == 5 | nivel == 6) & nivel2 == 1 ~ "Higher education complete",
                                       nivel == 7 ~ "Higher education complete"),
                             levels = c("Up to complete secondary",
                                        "Higher education complete")),
         tit = case_when(tit == 1 ~ "Social sciences / humanities",
                         tit == 2 ~ "Economics and business administration",
                         tit == 3 ~ "Natural sciences",
                         tit == 4 ~ "Communication",
                         tit == 5 ~ "Arts",
                         tit == 6 ~ "Physical education",
                         tit == 7 ~ "Agriculture / environment",
                         tit == 8 ~ "Technical",
                         TRUE ~ NA_character_),
         tit2_c = factor(tit2_c),
         caes_f = factor(CAES_letra, labels = c("Agriculture, livestock, hunting, fishing",
                                                "Manufacturing industry",
                                                "Construction",
                                                "Trade",
                                                "Accommodation and food services",
                                                "Information and communication",
                                                "Financial and insurance activities",
                                                "Professional, scientific and technical activities",
                                                "Administrative activities and support services",
                                                "Public administration and defense",
                                                "Education",
                                                "Human health and social services",
                                                "Other service activities")),
         ramact = factor(ramact, labels = c("Software",
                                        "Metalworking",
                                        "Pharmaceutical",
                                        "Food industry",
                                        "Hospitality",
                                        "Textile",
                                        "Furniture")),
         CIUO1 = factor(case_when(CIUO >= 1000 & CIUO < 2000 ~ "Directors and managers",
                           CIUO >= 2000 & CIUO < 3000 ~ "Scientific and intellectual professionals",
                           CIUO >= 3000 & CIUO < 4000 ~ "Technicians and mid-level professionals",
                           CIUO >= 4000 & CIUO < 5000 ~ "Administrative support staff",
                           CIUO >= 5000 & CIUO < 6000 ~ "Service workers and salespeople",
                           CIUO >= 7000 & CIUO < 8000 ~ "Craft and related trades workers",
                           CIUO >= 8000 & CIUO < 9000 ~ "Plant and machine operators and assemblers",
                           CIUO >= 9000 & CIUO < 9990 ~ "Elementary occupations",
                           TRUE ~ NA_character_),
                        levels = c("Directors and managers",
                                   "Scientific and intellectual professionals",
                                   "Technicians and mid-level professionals",
                                   "Administrative support staff",
                                   "Service workers and salespeople",
                                   "Craft and related trades workers",
                                   "Plant and machine operators and assemblers",
                                   "Elementary occupations")),
         CIUO_c = as.character(CIUO),
         CIUO3 = as.numeric(substr(CIUO_c, 1, 3)),
         CIUO2 = as.numeric(substr(CIUO_c, 1, 2)),
         tamano = ifelse(trabajprin5 == -999, NA_character_, trabajprin5),
         tamano = factor(tamano, labels = c("One person",
                                    "2 to 5",
                                    "6 to 10",
                                    "11 to 50",
                                    "51 to 200",
                                    "More than 200")))

base <- base %>% 
  mutate(across(tarea1:tarea4, ~factor(., labels = c("Not at all", "Very little", "To some extent", "To a great extent", "To a very high extent"))))

base <- base %>% 
  mutate(across(frecuencia1:tecno5, ~ na_if(., -999))) 

base <- base %>%
  mutate(across(frecuencia1:tecno5, ~factor(., levels = c(1, 2, 3, 4, 5),
                                                  labels = c("Never",
                                                             "Less than once a month",
                                                             "Less than once a week but at least once a month",
                                                             "At least once a week but not every day",
                                                             "Every day"))))

base <- base %>% 
  mutate(ia1 = factor(ia1, labels = c("AI-No", "AI-Yes")))

# Income imputation
base <- base %>% 
  mutate(trabajprin15c = case_when(trabajprin15 == 1 ~ "No income",
                                   trabajprin15 == 2 ~ "1 to 90000",
                                   trabajprin15 == 4 ~ "150001 to 200000",
                                   trabajprin15 == 6 ~ "270001 to 330000",
                                   trabajprin15 == 7 ~ "330001 to 410000",
                                   trabajprin15 == 8 ~ "410001 to 510000",
                                   trabajprin15 == 9 ~ "510001 to 660000",
                                   trabajprin15 == 10 ~ "660001 to 900000",
                                   trabajprin15 == 11 ~ "900001 to 1400000",
                                   trabajprin15 == 12 ~ "1400001 to 2500000",
                                   trabajprin15 == 13 ~ "2500001 to 5300000",
                                   trabajprin15 == -999 ~ "Unknown/No answer"),
         rango_ingresos_ocup = case_when(trabajprin14 >= 1 & trabajprin14 <= 90000 ~ "1 a 90000",
                                         trabajprin14 >= 150001 & trabajprin14 <= 200000 ~ "150001 a 200000",
                                         trabajprin14 >= 270001 & trabajprin14 <= 330000 ~ "270001 a 330000",
                                         trabajprin14 >= 330001 & trabajprin14 <= 410000 ~ "330001 a 410000",
                                         trabajprin14 >= 410001 & trabajprin14 <= 510000 ~ "410001 a 510000",
                                         trabajprin14 >= 510001 & trabajprin14 <= 660000 ~ "510001 a 660000",
                                         trabajprin14 >= 660001 & trabajprin14 <= 900000 ~ "660001 a 900000",
                                         trabajprin14 >= 900001 & trabajprin14 <= 1400000 ~ "900001 a 1400000",
                                         trabajprin14 >= 1400001 & trabajprin14 <= 2500000 ~ "1400001 a 2500000",
                                         trabajprin14 >= 2500001 & trabajprin14 <= 5300000 ~ "2500001 a 5300000", 
                                         TRUE ~ NA_character_))

base$rango_ingresos_ocup <- ifelse(base$trabajprin14 == 0 | is.na(base$trabajprin14) |
                                     base$trabajprin14 > 8000000, 
                                         base$trabajprin15c,
                                         base$rango_ingresos_ocup)

tabla <- base %>% 
  select(trabajprin14, trabajprin15c, rango_ingresos_ocup)

base <- base %>% 
  mutate(ingresos = ifelse(trabajprin14 == 0 | is.na(trabajprin14) | trabajprin14 > 8000000, 
         NA_real_, 
         trabajprin14))

set.seed(971986)
#Imputo ingresos por rango
base <- hotdeck(data = base, variable = "ingresos", domain_var = "rango_ingresos_ocup") 

#Imputo ingresos que no tienen rango
base <- hotdeck(data = base, variable = "ingresos")


```

## Descriptivos

### Datos sociodemográficos
```{r datos sociodemográficos, echo=FALSE, message=FALSE, warning=FALSE, results='asis'}
demograficos <- base %>% 
  select(sex, Edad, sitcony, hij, obs, pais, local, nivel_ed_2)

print(dfSummary(demograficos, 
                varnumbers   = FALSE, 
                valid.col    = FALSE, 
                graph.magnif = 0.76),
      method = 'render')

theme_gtsummary_language("es", decimal.mark = ",", big.mark = ".")
theme_gtsummary_compact()

base %>%
  tbl_summary(include = c(sex, Edad, sitcony, hij, obs, pais, local, nivel_ed_2),
                 label = c(Edad ~ "Edad", 
                           sex ~ "Sexo", 
                           sitcony ~ "Situación conyugal",
                           hij ~ "Cantidad de hijos",
                           obs ~ "Sistema de salud",
                           pais ~ "Lugar de nacimiento",
                           local ~ "Lugar de residencia",
                           nivel_ed_2 ~ "Nivel educativo alcanzado"),
                 statistic = list(all_continuous() ~ "{mean} ({sd})",
                                  all_categorical() ~ "{n} ({p}%)"),
                 digits = list(all_categorical() ~ c(0, 1)),
                 missing = "no") %>% 
  as_flex_table() %>% 
  flextable::save_as_docx(path = "salidas/demograficos.docx")

```


### Datos educativos 
```{r datos educativos, echo=FALSE, message=FALSE, warning=FALSE}

base %>%
  filter(!is.na(tit)) %>% 
  group_by(tit) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = fct_reorder(tit, n), y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.02), size = 3) +
  labs(title = "Título de egreso del secundario",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        title = element_text(size = 12),
        plot.caption = element_text(size = 9)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))

base %>%
  filter(nivel_ed %in% c("Hasta terc. com.", "Universitario com.", "Posgrado"),
         !is.na(tit2_c)) %>% 
  group_by(tit2_c) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = fct_reorder(tit2_c, n), y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.02), size = 3) +
  labs(title = "Tipo de título superior",
       subtitle = "Población que finalizó estudios superiores",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        title = element_text(size = 12),
        plot.caption = element_text(size = 9)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))
```

### Capacitaciones 

En esta sección calculamos el porcentaje de cursos, capacitaciones, etc., que realizaron los encuestados en términos generales y en aquellos casos arfirmativos, se observan cuántos estuvieron vinculados al trabajo.

```{r capacitaciones, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  summarise(ev = mean(eduvirt, na.rm = T),
            ev_t = mean(eduvirt1, na.rm = T),
            capacit = mean(capacit1, na.rm = T),
            capacit_t = mean(educol1, na.rm = T),
            seminario = mean(capacit2, na.rm = T),
            seminario_t = mean(eduprop1, na.rm = T),
            otros_cursos = mean(capacit3, na.rm = T),
            otros_cursos_t = mean(eduni1, na.rm = T)) %>% 
  pivot_longer(cols = everything(), names_to = "tipo", values_to = "porcentaje") %>% 
  mutate(tipo = factor(tipo, labels = c("Educación virtual (población total)",
                                        "Educación virtual (relacionado al trabajo)*",
                                        "Capacitación (población total)",
                                        "Capacitación (relacionado al trabajo)*",
                                        "Seminarios (población total)",
                                        "Seminarios (relacionado al trabajo)*",
                                        "Otros cursos (población total)",
                                        "Otros cursos (relacionado al trabajo)*"))) %>%  
  ggplot(aes(x = fct_rev(tipo), y = porcentaje)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1, suffix = ""), y = porcentaje - 0.04), size = 3) +
  labs(title = "Cursos y capacitaciones realizadas en el último año",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024 \n
       *Sobre el total de la población que indico realizar ese tipo de curso o capacitación") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        title = element_text(size = 11),
        plot.caption = element_text(size = 9)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  coord_flip()

  
```


### Trabajo y rama de actividad

```{r Rama, echo=FALSE, message=FALSE, warning=FALSE}

# base %>%
#   group_by(caes_f) %>% 
#   tally() %>% 
#   adorn_percentages("col") %>% 
#   ggplot(aes(x = fct_rev(caes_f), y = n)) +
#   geom_bar(stat = "identity", alpha = 0.7) +
#   geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.02), size = 3) +
#   labs(title = "Rama de actividad declarada",
#        caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
#   theme(axis.title.x = element_blank(),
#         axis.title.y = element_blank(),
#         axis.text.y = element_text(size = 8)) +
#   scale_x_discrete(labels = function(x) str_wrap(x, width = 35)) +
#   scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
#   coord_flip()



# Calcular el número de observaciones por 'local'
base_n <- base %>%
  group_by(local) %>%
  summarise(N = n()) %>%
  mutate(local_n = paste0(local, " (n=", N, ")"))

# Unir con la base original
base <- base %>%
  left_join(base_n, by = "local")

# Gráfico
base %>%
  group_by(ramact, local_n) %>%  # Usamos local_n en lugar de local
  tally() %>%
  adorn_percentages("col") %>%
  ggplot(aes(x = fct_reorder(ramact, n), y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n + 0.008), size = 3) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 10),
        plot.caption = element_text(size = 9)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 35)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  coord_flip() +
  facet_wrap(~local_n)  # Usamos local_n con N en el título


ggsave("salidas/rama_actividad.png", width = 8, height = 5)
```


```{r Ocupacion, echo=FALSE, message=FALSE, warning=FALSE}
base %>%
  group_by(CIUO1) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = fct_rev(CIUO1), y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.015), size = 3) +
  # labs(title = "Ocupación según CIUO 08 a 1 dígito",
  #      caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 10),
        plot.caption = element_text(size = 9)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 25)) +
  coord_flip()

ggsave("salidas/ocupacion.png", width = 8, height = 5)

base %>%
  filter(!is.na(tamano)) %>% 
  group_by(tamano) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = tamano, y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = ""), y = n - 0.015), size = 3) +
  # labs(title = "Personas según tamaño del establecimiento en el que trabajan",
  #      caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(size = 10),
        plot.caption = element_text(size = 9)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 25))

ggsave("salidas/tamano_establecimiento.png", width = 8, height = 5)
```

### Ingresos laborales  

```{r ingresos, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  mutate(ingresos_medios = mean(ingresos)) %>% 
  ggplot(aes(x = ingresos)) +
  geom_histogram(fill = "lightblue", alpha = 0.7) +
  geom_vline(aes(xintercept = ingresos_medios), color = "red", linetype = "dashed",
             size = .5) +
  labs(title = "Distribución de los ingresos laborales",
       subtitle = "Ingreso promedio en línea punteada",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 8),
        plot.caption = element_text(size = 9)) +
  scale_x_continuous(limits = c(0, 4000000), breaks = seq(0, 4000000, 500000))
  

```


### Tareas y actividades en el trabajo (Interacción, aprendizaje, organización, trabajo físico)

```{r Autonomía, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = tarea1:tarea4, names_to = "tarea", values_to = "categoria") %>% 
  count(tarea, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = tarea) %>% 
  ggplot(aes(x = tarea, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.8) +
  scale_fill_ucscgb() +
  labs(
    # title = "Dimensiones de la autonomía en el trabajo",
       subtitle = "Level of choice or change of...",
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 10),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 10),
        plot.caption = element_text(size = 9)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Task sequence", 
                                                     "Way of doing the job", 
                                                     "Speed and pace", 
                                                     "Working hours")) +
  coord_flip()

ggsave("salidas/autonomia.png", width = 8, height = 5)
  

```

```{r Aprendizaje, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = frecuencia1:frecuencia3, names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.8) +
  labs(
    # title = "Dimensiones del aprendizaje en el trabajo",
       subtitle = "Proportion of time in which...",
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 11),
        legend.title = element_blank(),
        legend.text = element_text(size = 10),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_ucscgb(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Learn new things with colleagues", "Learn by doing",
"Keep up to date with products and services"), width = 20))

ggsave("salidas/aprendizaje.png", width = 8, height = 5)

```

```{r Cooperacion, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = c(frecuencia4, frecuencia5, frecuencia6, frecuencia7), names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.8) +
  labs(
    # title = "Dimensiones de la cooperación en el trabajo",
       subtitle = "Proportion of time spent with coworkers...",
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 11),
        legend.title = element_blank(),
        legend.text = element_text(size = 10),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_ucscgb(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Cooperate or collaborate",
"Share information",
"Train or teach",
"Advise or counsel"), width = 20))

ggsave("salidas/cooperacion.png", width = 8, height = 5)

```

```{r Planificación, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = c(frecuencia8, frecuencia9), names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.9) +
  labs(
    # title = "Dimensiones de la planificación en el trabajo",
       subtitle = "Proportion of time in which...",
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_text(size = 11),
        legend.title = element_blank(),
        legend.text = element_text(size = 10),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_ucscgb(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Plans own activities",
                                       "Plans activities of others"), width = 20))

ggsave("salidas/planificacion.png", width = 8, height = 5)

```

```{r Persuación, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = c(frecuencia10, frecuencia11), names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 3) +
  labs(
    # title = "Dimensiones de la persuación en el trabajo",
       subtitle = "Proportion of time in which...",
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_text(size = 10),
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_ucscgb(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Convince or influence other people",
                                       "Negotiate with people"), width = 20))

ggsave("salidas/persuacion.png", width = 8, height = 5)

```


```{r Trabajo físico, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = c(frecuencia12:frecuencia14), names_to = "frecuencia", values_to = "categoria") %>% 
  count(frecuencia, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = frecuencia) %>%
  na.omit() %>% 
  ggplot(aes(x = frecuencia, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1)),
                position = position_stack(.5), size = 2.5) +
  labs(title = "Dimensiones del trabajo físico",
       subtitle = "Proporción de tiempo en el que...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.key.height = unit(1.3, "cm")) +
  scale_fill_ucscgb(labels = function(x) str_wrap(x, width = 15)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = str_wrap(c("Realiza tareas físicas por tiempo prolongado",
                                       "Transporta o mueve cargas pesadas",
                                       "Debe ser hábil o preciso con los dedos o manos"), width = 20))

```


### Habilidades cognitivas (lectura, escritura, números, problemas)

```{r Habiliades lectura-escritura, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = habili1:habili9, names_to = "tarea", values_to = "categoria") %>% 
  count(tarea, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = tarea) %>% 
  na.omit() %>% 
  ggplot(aes(x = tarea, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = ifelse(porcentaje >= 0.04, scales::percent(porcentaje, accuracy = 0.1), "")), 
            position = position_stack(.5), size = 2.5) +
  labs(
    # title = "Habilidades de lectura y escritura",
       subtitle = "How often...",
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 9),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 8)) +
  scale_fill_ucscgb(guide = guide_legend(nrow = 2),
                      labels = function(x) str_wrap(x, width = 25)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Reads orders or instructions",
                            "Reads letters, memos, or emails",
                            "Reads articles in newspapers or professional magazines",
                            "Reads manuals or reference materials",
                            "Reads accounts and invoices",
                            "Reads maps, diagrams, or schematics",
                            "Writes letters or emails",
                            "Writes articles for newspapers or magazines",
                            "Writes reports")) +
  coord_flip()
 
ggsave("salidas/lectura_escritura.png", width = 8, height = 5)

```

```{r Habiliades numéricas, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  pivot_longer(cols = habili10:habili15, names_to = "tarea", values_to = "categoria") %>% 
  count(tarea, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = tarea) %>% 
  na.omit() %>%
  ggplot(aes(x = tarea, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = ifelse(porcentaje >= 0.04, scales::percent(porcentaje, accuracy = 0.1), "")), 
            position = position_stack(.5), size = 2.5) +
  labs(
    # title = "Habilidades numéricas y problemas",
       subtitle = "How often...",
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 9),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 8)) +
  scale_fill_ucscgb(guide = guide_legend(nrow = 2),
                      labels = function(x) str_wrap(x, width = 25)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Calculates prices, costs, or budgets",
                            "Calculates fractions, decimals, or percentages",
                            "Uses algebraic calculations or simple formulas",
                            "Uses complex statistics",
                            "Handles simple problems",
                            "Handles complex problems")) +

  coord_flip()

ggsave("salidas/numeros_problemas.png", width = 8, height = 5)
  

```

### Tecnología

```{r Tecnología, echo=FALSE, message=FALSE, warning=FALSE}

base %>% 
  pivot_longer(cols = tecno1:tecno5, names_to = "tarea", values_to = "categoria") %>% 
  count(tarea, categoria) %>% 
  mutate(porcentaje = n / sum(n), .by = tarea) %>% 
  na.omit() %>%
  ggplot(aes(x = tarea, y = porcentaje, fill = categoria)) +
  geom_bar(stat = "identity", position = "fill", alpha = 0.7) +
  geom_text(aes(label = ifelse(porcentaje >= 0.04, scales::percent(porcentaje, accuracy = 0.1), "")), 
            position = position_stack(.5), size = 2.5) +
  labs(title = "Habilidades tecnológicas",
       subtitle = "Con qué frecuencia...",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8),
        legend.title = element_blank(),
        legend.position = "bottom",
        legend.text = element_text(size = 8)) +
  scale_fill_ucscgb(guide = guide_legend(nrow = 2),
                      labels = function(x) str_wrap(x, width = 25)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Realiza operaciones en internet",
                              "Usa hojas de cálculo",
                              "Usa procesador de texto",
                              "Usa un lenguaje de programación",
                              "Realiza videoconferencias")) +
  coord_flip()
  

```

### Inteligencia artificial

```{r IA, echo=FALSE, message=FALSE, warning=FALSE}
base %>%
  group_by(ia1) %>% 
  tally() %>% 
  adorn_percentages("col") %>% 
  ggplot(aes(x = ia1, y = n)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(n, accuracy = 0.1, suffix = "")), 
            size = 3,
            position = position_stack(vjust = 0.5)) +
  labs(title = "Usa inteligencia artificial en su trabajo",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))

```

```{r Usos de IA, echo=FALSE, message=FALSE, warning=FALSE}
base %>% 
  summarise(ia2_01 = mean(ia2_1, na.rm = T),
            ia2_02 = mean(ia2_2, na.rm = T),
            ia2_03 = mean(ia2_3, na.rm = T),
            ia2_04 = mean(ia2_4, na.rm = T),
            ia2_05 = mean(ia2_5, na.rm = T),
            ia2_06 = mean(ia2_6, na.rm = T),
            ia2_07 = mean(ia2_7, na.rm = T),
            ia2_08 = mean(ia2_8, na.rm = T),
            ia2_09 = mean(ia2_9, na.rm = T),
            ia2_10 = mean(ia2_10, na.rm = T)) %>% 
  pivot_longer(cols = everything(), names_to = "tipo", values_to = "porcentaje") %>% 
  ggplot(aes(x = fct_reorder(tipo, porcentaje), y = porcentaje)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1, suffix = ""), y = porcentaje - 0.02), size = 3) +
  # labs(title = "Principales usos de la IA",
  #      caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 10)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_x_discrete(labels = c("Others",
                            "Mathematical calculations",
                            "Programming",
                            "Queries (chatbot)",
                            "Audio recognition",
                            "Image and video generation",
                            "Image recognition",
                            "Text translation",
                            "Text comprehension / synthesis",
                            "Writing, editing, proofreading texts")) +

  coord_flip()

ggsave("salidas/uso_ia.png", width = 8, height = 5)
```

```{r Programas de IA, echo=FALSE, message=FALSE, warning=FALSE}

base %>% 
  summarise(ia3_01 = mean(ia3_1, na.rm = T),
            ia3_02 = mean(ia3_2, na.rm = T),
            ia3_03 = mean(ia3_3, na.rm = T),
            ia3_04 = mean(ia3_4, na.rm = T),
            ia3_05 = mean(ia3_5, na.rm = T),
            ia3_06 = mean(ia3_6, na.rm = T),
            ia3_07 = mean(ia3_7, na.rm = T),
            ia3_08 = mean(ia3_8, na.rm = T),
            ia3_09 = mean(ia3_9, na.rm = T),
            ia3_10 = mean(ia3_10, na.rm = T)) %>% 
  pivot_longer(cols = everything(), names_to = "tipo", values_to = "porcentaje") %>% 
  mutate(tipo = factor(tipo, labels = c("ChatGPT", "Bard", "Microsoft Copilot", "GitHub Copilot", "DALL-E",
                                        "Midjourney", "DeepL", "Civitai", "Quillbot", "Character.IA"))) %>% 
  filter(porcentaje > 0) %>%
  ggplot(aes(x = fct_reorder(tipo, porcentaje), y = porcentaje)) +
  geom_bar(stat = "identity", alpha = 0.7) +
  geom_text(aes(label = scales::percent(porcentaje, accuracy = 0.1, suffix = ""), y = porcentaje - 0.02), size = 3) +
  labs(title = "Principales herramientas de IA utilizadas",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  coord_flip()

```



## Exploración multidimensional

### Análisis de correspondencias múltiples

En este análisis se indaga la relación entre las dimensiones laborales identificadas como cuellos de botella a la automatización. 

```{r ACM, echo=FALSE, message=FALSE, warning=FALSE, out.width='120%'}

base_mca <- base %>% 
  select(frecuencia4, frecuencia5, frecuencia6, frecuencia7, frecuencia8, frecuencia9, frecuencia10, frecuencia11, habili14, habili15, habili11, habili13, habili3, habili6, habili8, habili9, tecno4, tarea4, CIUO1, ramact, ia1, ia2_1:ia2_10)

base_mca <- base_mca %>% 
  mutate(across(frecuencia4:tecno4, ~case_when(. %in% c("Never",
"Less than once a month") ~ "0",
                                                . == "Less than once a week but at least once a month" ~ "1-3",
                                                . %in% c("At least once a week but not every day",
"Every day") ~ "4-30")),
         tarea4 = case_when(tarea4 == "Not at all" ~ "N",
                   tarea4 == "Very little" ~ "VL",
                   tarea4 == "To some extent" ~ "SE",
                   tarea4 == "To a great extent" ~ "GE",
                   tarea4 == "To a very high extent" ~ "VHE"),

         across(ia2_1:ia2_10, ~case_when(. == 0 | is.na(.) ~ "No",
                                         . == 1 ~ "Si"))) %>% 
  mutate(across(ia2_1:ia2_10, as.factor)) %>%
  rename(cooperate = frecuencia4,
       share_info = frecuencia5,
       teach = frecuencia6,
       advise = frecuencia7,
       plan_own = frecuencia8,
       plan_others = frecuencia9,
       time_management = tarea4,
       influence = frecuencia10,
       negotiate = frecuencia11,
       simple_problem = habili14,
       complex_problem = habili15,
       basic_math = habili11,
       advanced_math = habili13,
       reading1 = habili3,
       reading2 = habili6,
       writing1 = habili8,
       writing2 = habili9,
       programming_lang = tecno4,
       drafting = ia2_1,
       comprehension = ia2_2,
       translation = ia2_3,
       recognition = ia2_4,
       image_video = ia2_5,
       audio = ia2_6,
       chatbot = ia2_7,
       programming = ia2_8,
       calculations = ia2_9,
       others = ia2_10)



mca <- speMCA(base_mca[,1:18], ncp = 2)

mca <- flip.mca(mca, dim = 1)

modif.rate(mca)$modif 


ggmca <- ggcloud_variables(mca, vlab = T, shapes = T, shapesize = 1.5, force = .2,
                  textsize = 2, legend = "none", col = "black") +
  labs(
    # title = "Análisis de correspondencias múltiples", 
       subtitle = "Tareas y habilidades laborales. Variables activas"
       # ,
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_text(size = 9),
        axis.title.y = element_text(size = 9),
        axis.text.y = element_text(size = 8),
        axis.text.x = element_text(size = 8),
        plot.caption = element_text(size = 9, hjust = 1)) +
  annotate("text", x = -.8, y = 2, label = "Presence of bottlenecks", size = 4, hjust = .3, vjust = 0, colour = "red") +
  annotate("text", x = .7, y = 1, label = "Absence of bottlenecks", size = 4, hjust = .3, vjust = 0, colour = "red")

ggmca

ggsave("salidas/mca.png", width = 8, height = 5)

cloud_ind <- ggcloud_indiv(mca, col = "lightgrey") +
  scale_color_d3() +
  labs(title = "Análisis de correspondencias múltiples", 
       subtitle = "Nube de individuos",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(size = 9),
        axis.title.x = element_text(size = 9),
        axis.title.y = element_text(size = 9),
        axis.text.y = element_text(size = 8),
        axis.text.x = element_text(size = 8),
        plot.caption = element_text(size = 9, hjust = 1)) +
  guides(color = guide_legend(override.aes = list(size = 2)))

cloud_ind

```

```{r ACM resultados, echo=FALSE, message=FALSE, warning=FALSE}
contrib_1 <- tabcontrib(mca, dim = 1, best = T)
contrib_2 <- tabcontrib(mca, dim = 2, best = T)


datatable(
  contrib_1,
  options = list(
    scrollX = TRUE,
    fixedColumns = list(leftColumns = 3) # Fija la primera columna
  ),
  caption = "Contribuciones al factor 1",
  extensions = "FixedColumns"
)

datatable(
  contrib_2,
  options = list(
    scrollX = TRUE,
    fixedColumns = list(leftColumns = 3) # Fija la primera columna
  ),
  caption = "Contribuciones al factor 2",
  extensions = "FixedColumns"
)


```


```{r ACM suplementarias, echo=FALSE, message=FALSE, warning=FALSE, out.width='120%'}

ggmca <- ggcloud_variables(mca, vlab = T, shapes = T, shapesize = 1.5, force = .2,
                  textsize = 2, points = "best", legend = "none", col = "lightgrey") +
  labs(
    # title = "Análisis de correspondencias múltiples", 
       subtitle = "Job tasks and skills. Supplementary variables (Occupations, branch of activity and use of AI)"
       # ,
       # caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024"
       ) +
  theme(axis.title.x = element_text(size = 9),
        axis.title.y = element_text(size = 9),
        axis.text.y = element_text(size = 8),
        axis.text.x = element_text(size = 8),
        plot.caption = element_text(size = 9, hjust = 1)) +
  scale_fill_ucscgb()

ggadd_supvars(ggmca, mca, vars = base_mca[,19:21], vlab = F, force = 1, shapes = T, shapesize = 1.5)

ggsave("salidas/mca_sup.png", width = 8, height = 5)

des <- dimdescr(mca, vars = base_mca[,19:21])
des <- des$dim.1$categories

```


## Automatización en el mercado de trabajo

Se construye un índice de riesgo de automatización, a partir de las coordenadas factoriales resultantes de la primera dimensión del análisis de correspondencias múltiples realizado. Luego ese índice fue estandarizado para que varíe de 0 a 1, donde 0 es el mínimo riesgo y 1 el máximo.

```{r Construcción de índice, echo=FALSE, message=FALSE, warning=FALSE}

base <- base %>%
  mutate(dim1 = mca$ind$coord[,1], 
         auto_index = (dim1 - min(dim1)) / (max(dim1) - min(dim1)))   

summary(base$auto_index)

```

### Riesgo de automatización según grupos sociales

#### Demográficos

```{r Demográficos, echo=FALSE, message=FALSE, warning=FALSE}
base %>%
  ggplot(aes(x=auto_index, y=sex, fill=sex)) +
  geom_density_ridges(alpha = .5) +
  geom_vline(xintercept = 0.25, linetype = "dashed", color = "black") +
  geom_vline(xintercept = 0.57, linetype = "dashed", color = "black") +
  labs(title = "Riesgo de automatización según sexo",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 9),
        axis.text.x = element_text(size = 9),
        title = element_text(size = 9)) +
  scale_fill_ucscgb() +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 30)) +
  scale_x_continuous(breaks=seq(0, 1, 0.1))

base %>%
  ggplot(aes(x=auto_index, y=grupo_edad, fill=grupo_edad)) +
  geom_density_ridges(alpha = .5) +
  geom_vline(xintercept = 0.25, linetype = "dashed", color = "black") +
  geom_vline(xintercept = 0.57, linetype = "dashed", color = "black") +
  labs(title = "Riesgo de automatización según edad",
       subtitle = "Se grafican en líneas punteadas los percentiles 25 y 75",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 9),
        axis.text.x = element_text(size = 9),
        title = element_text(size = 9)) +
  scale_fill_ucscgb() +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 30)) +
  scale_x_continuous(breaks=seq(0, 1, 0.1))


base %>%
  ggplot(aes(x=auto_index, y=grupo_edad, fill=grupo_edad)) +
  geom_density_ridges(alpha = .5) +
  geom_vline(xintercept = 0.25, linetype = "dashed", color = "black") +
  geom_vline(xintercept = 0.57, linetype = "dashed", color = "black") +
  labs(title = "Riesgo de automatización según edad",
       subtitle = "Se grafican en líneas punteadas los percentiles 25 y 75",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 9),
        axis.text.x = element_text(size = 9),
        title = element_text(size = 9)) +
  scale_fill_ucscgb() +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 30)) +
  scale_x_continuous(breaks=seq(0, 1, 0.1))


base %>%
  ggplot(aes(x=auto_index, y=nivel_ed_2, fill=nivel_ed_2)) +
  geom_density_ridges(alpha = .5) +
  geom_vline(xintercept = 0.25, linetype = "dashed", color = "black") +
  geom_vline(xintercept = 0.57, linetype = "dashed", color = "black") +
  labs(title = "Riesgo de automatización según nivel educativo",
       subtitle = "Se grafican en líneas punteadas los percentiles 25 y 75",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 9),
        axis.text.x = element_text(size = 9),
        title = element_text(size = 9)) +
  scale_fill_ucscgb() +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 30)) +
  scale_x_continuous(breaks=seq(0, 1, 0.1))

```


#### Mercado de trabajo

```{r Laborales, echo=FALSE, message=FALSE, warning=FALSE}
base %>%
  ggplot(aes(x=auto_index, y=CIUO1, fill=CIUO1)) +
  geom_density_ridges(alpha = .5) +
  geom_vline(xintercept = 0.25, linetype = "dashed", color = "black") +
  geom_vline(xintercept = 0.57, linetype = "dashed", color = "black") +
  labs(title = "Riesgo de automatización según ocupación",
       subtitle = "Se grafican en líneas punteadas los percentiles 25 y 75",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 9),
        axis.text.x = element_text(size = 9),
        title = element_text(size = 9)) +
  scale_fill_ucscgb() +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 30)) +
  scale_x_continuous(breaks=seq(0, 1, 0.1))

base %>%
  ggplot(aes(x=auto_index, y=ramact, fill=ramact)) +
  geom_density_ridges(alpha = .5) +
  geom_vline(xintercept = 0.25, linetype = "dashed", color = "black") +
  geom_vline(xintercept = 0.57, linetype = "dashed", color = "black") +
  labs(title = "Riesgo de automatización según rama de actividad",
       subtitle = "Se grafican en líneas punteadas los percentiles 25 y 75",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 9),
        axis.text.x = element_text(size = 9),
        title = element_text(size = 9)) +
  scale_fill_ucscgb() +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 30)) +
  scale_x_continuous(breaks=seq(0, 1, 0.1))

base %>%
  filter(!is.na(tamano)) %>% 
  ggplot(aes(x=auto_index, y=tamano, fill=tamano)) +
  geom_density_ridges(alpha = .5) +
  geom_vline(xintercept = 0.25, linetype = "dashed", color = "black") +
  geom_vline(xintercept = 0.57, linetype = "dashed", color = "black") +
  labs(title = "Riesgo de automatización según tamaño del establecimiento",
       subtitle = "Se grafican en líneas punteadas los percentiles 25 y 75",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024") +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 9),
        axis.text.x = element_text(size = 9),
        title = element_text(size = 9)) +
  scale_fill_ucscgb() +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 30)) +
  scale_x_continuous(breaks=seq(0, 1, 0.1))


```


```{r Ocupaciones, echo=FALSE, message=FALSE, warning=FALSE}
tabla <- base %>% 
  group_by(CIUO) %>% 
  summarise(
    promedio_auto = mean(auto_index, na.rm = TRUE),
    sd_auto = sd(auto_index, na.rm = TRUE),
    CIUO1 = first(CIUO1)  # Asegúrate de mantener la columna 'CIUO1'
  )


sum(is.na(tabla$sd_auto))


ggplot(tabla, aes(x=promedio_auto, y=sd_auto, color = CIUO1, label = as.character(CIUO))) +
  geom_point() +
  geom_text_repel(min.segment.length = 5, seed = 52, box.padding = 0.1, size = 1.8,
                  max.overlaps = 20) +
  labs(title = "Distribución de ocupaciones según promedio y desviación estándar del riesgo de automatización",
       caption = "Fuente: elaboración propia en base a Encuesta de Automatización 2024",
       color = "CIUO (1 dígito)") +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_blank(),
        axis.text.y = element_text(size = 9),
        axis.text.x = element_text(size = 9),
        title = element_text(size = 9),
        legend.title = element_text(face = "bold"),
        legend.text = element_text(size = 8),
        legend.key.height = unit(1, "cm")) +
  scale_y_continuous(breaks=seq(0, .4, 0.05))+
  scale_x_continuous(breaks=seq(0, 1, 0.1)) +
  scale_color_ucscgb(labels = function(x) str_wrap(x, width = 25))
```


## Inteligencia artificial. Entre la ampliación y la automatización

```{r IA y automatización, echo=FALSE, message=FALSE, warning=FALSE}
ggadd_kellipses(cloud_ind, mca, base_mca$ia1, label = FALSE)

```